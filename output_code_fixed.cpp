namespace dybi{class dynamic_bitset{public:constexpr static int B=64;class bit_reference{ dynamic_bitset&bitset_ref;int  pos;public:bit_reference(dynamic_bitset&ref,int p):bitset_ref(ref),pos(p){}bit_reference&operator                            =(bool val){bitset_ref.set(pos,val);return*                    
/*a*/this/**/;/**/}bit_reference/*  *//*l*//*b*/&operator/*u*//**/ /*e*/=(const/**//*c       g*//*s*/bit_reference/**/    &other){/*o*//**/bitset_ref./*e*//**//**/set(/**//**/pos,static_cast/**/</*a*/bool/**/                                                 /*vnb rq*/>/*fu*/(other/**/)/**/                    
/*zvxj*//**//**//**//**//*e*//**//* */);/**//*y*/return/*e*/*this/* */;/**/}operator/*       */bool()/**//**/const/**/    /**/{return/**/bitset_ref/**//**//**/./**/get/**/(pos);/**/}/**//*q*/bit_reference                                                        /*k  */&flip()/**//*xmx*//**/                    
/*je*//**//**//*f*//**//*k*//**/{/* */bitset_ref/**/.set(/**//**/pos,/**/!bitset_ref/*       o*//**/.get(/**//*h*//**/    pos/**//*m*//**/)/*jd*/);return*/**/this/**//*v*/;}bool/*sp*//*a*//**/operator                                                              ~   /**/()/**//**/const/**/                    
/*uf*//**/{return!bitset_ref/**//*p awsic*/.get/*p*//**/(pos/**/)/*w c*//**/;}/*b*//*b       p*/}/**/;static_assert/*i    pt*/(sizeof(/**/uint64_t/**//**/)/**/*8==B/**/,/**/"check block width"/**/                                                                       )  /*izxyj*//*qarcu*/;                    
static_assert(std::is_same<uint64_t ,uint64_t>::value,"modify popcnt(), ctz(), clz()")       ;/**/static/**//**//**//*    tgnfvp*/inline/**/constexpr/**/bool/*jq*/on(/*c*/int/**//*kj*//**/i/*v*/                                                                         ,/*b   */uint64_t/**/x                    
/**//*sz*/)noexcept{/**//**/return/* k*/(/**//**/(uint64_t(/*f*//**/1 )<<i)&/**//**//*       r*/x/**/)/*a*//*mm*/!=0/*    j*/;/*j*/}static/*h*/inline/**/constexpr/**//**/uint64_t/**/prefix/**/                                                                           /**//*  */(int/**//**/                    
/*pvu*//**//*l*//**//**//**//*avfc*/ /**//*nv*//*mv*/i/**/)noexcept{/* */return/**/(/*       *//**/i>=/**/B)?/**//*x*/    /*r*/~/**/uint64_t(0):/**/((/**/uint64_t(1/**/)/*u*/<</**//**/i)/**/                                                                            /*e*/-/*   f*//*g*//**/                    
/*vexx*//**//*bvo*//*rd*/uint64_t/**/ (1)/**/);}/*gj*/static/**/inline/**//**//**//**/       constexpr/**//**/uint64_t   /**//**//*f*/suffix(int/*v*/i/**/)noexcept{return~prefix/**/(/**/B                                                                               -i/*     l   */)/*j*/;                     
}static/*j*/inline/*em*//**/constexpr uint64_t/**/range(int/**/l,int/*m */r)noexcept{       return/*s*/prefix(/*s*/r/*   */)/**//**//*tn*/^/**/prefix/**/(/**//*r*/l-/**//**/1/**//*o*/                                                                                                  )/*ja*/                     
;}static/**/constexpr/**/int/**/popcnt (uint64_t/*tpb*/x)noexcept{/**//* */return/**/       __builtin_popcountll(x);/*   */}static/*a*/constexpr/**/int/*i*/clz(/**/uint64_t    /*y*/                                                                                                     x/**/)                     
noexcept{return/*k*/__builtin_clzll(x) ;}static/*n*//**/constexpr/**/int ctz(uint64_t       /**/x)noexcept{/*h*/return   __builtin_ctzll(x/*c*/);/**//*l*/}/**/static/**/ /*  ncp*/                                                                                                        /*i*/                     
inline/**/constexpr/**/int/**/block_id  (int/**/i)noexcept{return/*rf*/i/ B;/*shw*//*       */}/**//**/int/**/n/**/,m;   std/*r*/::/**/vector</**/uint64_t/**//**//* m      wwm*/                                                                                                          >/**/                     
b;inline/**/uint64_t/**/submask(/**/int l/*s*/,/**//*e*//*c*//**/int/**/r/**/)const/*       */noexcept{/**//**/int/*co   */bx=/**/block_id/**/(/**//*c*/l);assert(         bx==                                                                                                             /**/                     
/*zj*//*b*//**//*t*//*d*/block_id(/**/r) )/**/;/**/return(/**/b/**/[/**//* lndm*/bx]&       range/*a*/(l-/**/bx/**/*/*  */B/**/+/*pqt*//**/1/**/,/**/r-/*j*/bx/*   */    /**/*                                                                                                              /**/                     
/*sv*/B+1/**//**//**/)/**//**/);}/**//*p u*//**//**//**//**//**/inline/**/ /**/void/*       yih*/trim/*j*/()noexcept/*n*/{/**/b.back/**/()&=/**/prefix/**/(/**/n/**/%B  /**/                                                                                                                 ==0                     
?B:n%B/*elr*/);/**/}dynamic_bitset/*m*//* */(int/**/n/**/):dynamic_bitset/* *//**//*w       t*//*ldaqpqi*//**/(n,/*s*/false/**/)/*b*/{/**/}/**//**/;dynamic_bitset/**/(/**/                                                                                                                  int                     
n/**/,bool/**/init/**/)/**//**/:n/*r*/(n/* */),/**//**/m/*s*/(/**/(/**//*oa */n+B-1)/      /**//**//**//*f*//**//**//*wrum*//*f*//**//*g*//*wx*//*kqn*//*cgv*//**//*k*/B),                               b(                                                                                   m                      
 /**//*z*//**//*a*//**//**//*s*//**//**//* *//**/,init/**/?~uint64_t/**//**/(0)/**//*      s*/:uint64_t(/**/0)/**/){/**//*e*/trim/**/();};/**/inline/**/void/**/set(/**/                             int                                                                                      i                      
, /*xq*//**//**//*t*//*g*//**//*l*//**//**/ bool/*m*/val/**//*m*/)noexcept/* *//**//*      w*/{assert(/**//**/0/**//**/<=i/**//**/and/**/i/**/<n)/**/;if(/*gh*//**/val)                   b/*     tk*/[                          i/                                                           B                    ] 
|=(uint64_t(1)<<(i%B));else/*v*/b[i/**//**// /*kbnr*//*dhw*//**//*nc*//**//* cboamdfs      a*//**//**//**//*qox*//**//**//**//**/B/**//**/]&=/*r*/~/**/(/**/uint64_t (                 /* reu  *//**/                /*       i*/                                                             1                      
/*la*//**//**//*c*//**//*y*//*p*//*b*//**//* r*/)<</**/(/**/i%B)/**/);}inline/**/bool     /**/get(/**/int/**//**/i)/**//*s*/const/**/noexcept/**/{/*ij*/assert(/**/ 0                      <=/*kvd*/                i       and                                                               i                      
/*z*//*i*//**//**/</**//*t*/n/**/);return/**/ /*q*/(/**//**/b/**/[/**/i/*k*// /*v*//*     jr*//**//*d*/B]/**//**//**/&/**/(/*a*//*m*/uint64_t/*g*/(1/* */)<<(i/**/ %                 B/*t      *//*            */)       ))!=                                                                                        
0;}bit_reference/*i*/operator[](/**/int/**/i){ assert(0<=i/**/and/**/i/*mv*//*q*//**/</*a*//**//*fi*/n/*m*/)/**/;/*d*/return/**/bit_reference/**/ /*q  vrvk*//**/ (                 /**//*p      jz*/        /*q        */*                                                                                          
/*x*/this/*n*/,/*t*//**/i/**//*reb*//**/)/*j*/ ;}/**/bool/*n*//**//**/operator /*qz*/[](/*h*//**/int/**/i)const{/**//**/assert(0/**/<=/*lj*/i/*   u    rsby*/and i               </**//*           hs*/    n)/*      */;                                                                                             
/*xj*//*kmrdi*//**//*w*/return/**/get/*y*//**/( /**/i/**//**/)/*vx*//**/;}void/**/reset(/**/)noexcept{std/**/::/**/fill/**/(b/**/.begin/**//*    t     fhu*/(), b               /**//*         u    fw*/./**/      end(                                                                                              
),uint64_t(0));/**//**/}void/*gc*/operator/**//* bop*//**/&=/**/(const/*fi*//*w *//*m*/dynamic_bitset/**/&other/**//**//*q*/){for/**//**//*   dgb      f*/(int                 /*ood*/i              =0/**/;     /**/i                                                                                               
/*dkw*//**//*ad*//*xeipkj*//*lur*//*x*//**//**/< /*j*//**/std/**//**/::/**/min/* yqlf*/(m,other/**/.m);i++)b/**/[/**/i]/*h*/&=/**/other/*  gb*/.          /**/                /**//**/b/*             vf*/[i]  ;/**/                                                                                                 
/*uzcjmlmqo*//*ofg*//**/if/**//**/(/**/m>other.m) /*y*//**//**/std/*a*/::fill/*u         gyo*//**/(b/*mi*//**/.begin()/**/+/**//**/other/*h*/ .             m                /*nkd*/,b.begin      /*  d*//*f*//*m*/      (                                                                   )                       
+m/*d*/,/**/uint64_t/**//**/(0/*zo*//**/)/*vl*//* *//**/);}void/**//**/operator/* l*//*    */|=(const/*r*//**//**/dynamic_bitset&other)/**/  {                              for/*ym*//**/(/**/int/**/i=/**/0/**//*     */                                                                    ;                       
/*nm*//**//*y*//**//**//**//**//**//**//**//**//*p cmllyva*/i/**/</**//*by*/std::      min   /**/(m,other/**/./**/m/**/)/*uk*/;/*r*/i++                                    /*tkm*//**//**/)b[i]/**/|=/**/other./**/b  [                                                                     i]                       
/*w*//**//*jb*//**//*ca*/;/**/trim/**/();}/**//**/ void/**/operator^=(const/*v*//* aj    tmc   tds*/dynamic_bitset/**/&other){/*m*/for                                    (/*l*/int/**/i/**/=/*y*/0;/**//*u*//*k*/i<std                                                                     ::                       
/*a*//**//**//*rok*//*vnr*//**//*w*//*e*//*t*//*t*/ /*og*/min/**/(m/**/,other/**/./**//* *//*s  */m/**/);i/**//**/++)b/**/[i                                             /**/]/**//*v*/^=other/**/.b[i]/**//**//**/;trim                   /*       */                                     ()                        
/*yxez*//*ed*//**//*d*//**/;/**/}void/**/operator/* g*//**/<<=/**/(int/**/x){/*b*/if(/**/x==0/*  */ /*j*/)return/* dci*/                                                /*ubjqg*/;if/**//**/(x/*p*//**/>=n)/*d*/{reset/**/                        (                                       /**/                       
);return;}const/*p*/int/**/s=/*f i*/x             /  /*ruj*//**//*mb*//*daxv*//**//**//*              *//**//*y*/B  /*t*/,/**/                       d=x               /**/%/**/B,/*qli*/r=/**//*f*//*dq*//*onx*/B/**/-d/**/          /*        */;                                        if                     (  
/**//**//**//*v*//**//*yk*//*k*//*                */ /**//*b*//*ns*//*fhet*/d/**//**/>/**/             0  ){/**/for    (                          /*wc*/              int/*qb*/i=/**//**/m/**/-1-s/**/;i>/**/0;i/**/--)/*j*//*     e*/          b                                         [i+                        
/*n*//*p*//*mcpuqu*//**//**//**//*dna          *//**//*p*//*r*//**//*d*//**//*nx*/s]=/* */(             b  [  i ]<<d                        /**//*l*//*               y*/)|/*mft*//**//*l*/(b/**/[i/**/-1/**/]/**//**/>>r/*x*//*yr*/        );b                                           [s]                        
/*isz*//*te*//**//**//*zw*//*gf*//*h*//*f*//**//*qp*//**//*axxgl*//*pzm*//**//**//*tr*/= /**/            b  [  0 ] <<                  /*xhz*/d/*fz*//*              */;}else{/**/for/**//**//*lvcb*/(int/**/i/**/=/**/m-1-s/**/;/*       w*/i                                           >0;i                        
/*hg*//**//*lladv*//**//*aiya*//**//*e*//*g*//**//**//*s*//**//*a*//**//**//**//**//**//*  d*/           /*  k */                     /*jgh*//**/--)b[              i/*r*/+s]=/**/b[/**/i/**/];b[s]=b[0];/*we*/}/**/std       ::/*v*/   /*y*/                                            /**/                        
/**//**//**//**//*n*//*k*/fill/*t*/(/**//**/b/**/.begin(/**//**/),/**/b/**//**/./*a*/begin   /*           a  */ (                     /**/)+/**//**//*              a*/s,uint64_t/**//**/(/**/0/**/)/**//**/);trim();             /*t*//**/                                             /**/}                        
/**//**//**//*iy*//*gvt*/void/**//**/operator>>=(/**//**/int/*l*/x){if(/**/x/**//**//**//*     */         ==  0  )                    /*ap*/return;/*d             */if(/**/x/**//**/>=/*b*//**/n)/**/{reset(/**/)/**/               /**/                                               /**/;                        
/* *//**//*d*//**//**//**//*z*//**//**//**//*krowi*/return/**/;}const/**/int/**/s=/**/x/**/      /         /*  a */                    /*joe*//*q*//*              hl*/B,/*u*/d/**/=x/**/%B/**/,l=/**/B-d/*z*/;if/**//*hm        e     */(d>                                            /**/                         
/**/ /*etqa*//*mnd*//*hq*//*u*//**//**//*nk*//*g*//**//**//**//**/0/**//**//**//**/){for(int      i         =  s; i                    /**//**//**//*             die*//**//**/<m/**//**//**/-1;i++)/*q*/b[/**/i/**/-s]/*      */=/*     */                                            /**/(                         
b[i]>> d)|(b[i+1]<<l);b[m-1-s]=b[m-1]>>d;}else{for(int i=s;i<m;i++)b[i-s]=b[i];}std::fill(b.begin  (        )+  m  -                    s,b.end(),uint64_t        (0));}bool operator==(const dynamic_bitset&other){return((n==other.    n)and                                        b==other        . b  ) ;} bool 
/*fojr   */operator!=/**/(/**/const/*vt*//**/dynamic_bitset&/**/other/*u*/)/**/{return/**//**/              /*  */ !                    (*/*dk*//**/             this/*s*//**/==other)/**/;}dynamic_bitset/**/operator&(/*gl*/const/*     */                                           /*l*/                         
/*f*/ /*ubf x*//**//**/dynamic_bitset/**/&other/**/){/**/dynamic_bitset/**/result/**/(*this/*wh              */  )  ;                   /**/result&=             other;return/*jqv*/result;}/*y*//**/dynamic_bitset/**/operator|/*l       zb*/                                    (   /*th*/                         
const/**/dynamic_bitset&other){dynamic_bitset/**/result(*this/*gl*/);result/**/|=/**/other/*ul*/              ;  /* */                  /**//**//**/              /*tn*//*y*/return/**/result;/**/}dynamic_bitset/*vmfi*/operator/**//*     */                                    ^   /*mz*/                         
(const/*qjz*/dynamic_bitset&other){dynamic_bitset/**//**/result/**//*h*//*y*/(*/**//**/this/**//*             */  )  ;                  result^=/*i             r *//*nvitt*/other;return/**/result;/*u*//**/}/**/dynamic_bitset/*e m*/operator                                  /*   qj*/>>                         
/*b*//**//*pq*//*l*//**/(/**//**/int/*n*//**//**/x)/*b*/{dynamic_bitset/**/result/**/(*this/**/)/*             l  */ ;                   result/*ml            */  >>=x;return/**//**/result;/**/}dynamic_bitset/**//**/operator/**/<<(int/**/                                   /*  u*//**/                         
/*p*//*q*//**//*y*//*wa*//*eh*//*r*//**//**//**//*vp*//*e*/x)/*mg*/{dynamic_bitset/**/result(*this/*           */  )  ;                  result<<=x            ;    return/*p*/result;}/*ddi*/dynamic_bitset/**//**/operator~(){dynamic_bitset    /*         */                 /*w  *//*m*/                         
/*zqw*//*w*//**//*g*//**//*n*//*xz*//*n*//*jv*//*a*//*m*//**//**/result(*/**/this)/**//**/;/**/for/*q           e  */ (                  /*yc*//*z            x */          auto/*hw*/&/*y*/v/**/:/**/result./*xw*/b)/*f*//**/v/*x*/=~v/**/;result          .                  trim  /*fl*/(                         
/*zu*//*l*//**//*t*//*mh*//**//**//*j*//*oos*/);/**/return/*e*/result/**//*zk*/;}/**//**/int/**/count/*         */  (  )                 const/**/           /*cl*/                   /*kih*/noexcept{return/**/std::accumulate/*m*/(b.begin(/*          */),                  /*t  */b/*m*/                         
/*wjq*/.end/**//**/(/**/),0,/**//**/[/**//**/]/*pp*/(int/**//*z*//*c*//**//*py*/sum,uint64_t/*n*/value/*         g  */ )                 {return/*           x *//*f*/                                /**/sum/**/+popcnt/**//*i*/(value/**//*      vmc    */                   )/*  a*/;/**/                         
/**//*p*//*msex*//*h*//**//**//*x*/})/**/;}/*p*/int/*d*/find_first()/**//*f*//**//**//*p*/{int/**/pos/*eiu       */  =  -                 /*fm*//*           k */                                      1/*ib*/;/**//*q*//**/for(int/*oio*/bi     /**/=                        0;bi  </*qw*/m                         
/*w*//**/ /*t*//*di*//*gorhkq*//*bwt*//**/;/**/bi/**/++){if/**/(/**/b/*v*//*z*/[/**/bi/**/]==/**/uint64_t/*       fi */ (                 0/*g*//*          */                                             /**//**/)/*n*/)continue/**/;pos/*     toj*/                       =/*sq */ctz(b/*mm*/[                    
/*j*//*q vja*//*dpl*//*v*//**//**/bi])+bi*B;break;}return/**//*x*/pos;/**//**/}/*qqo*/int/**//*m*/find_last/*      s  l */                /**//*i           */ (                                              /*zmbt*/){int/**//**/pos/**//*    q*/ =    -                   /*ntr */1/**//**//**/                   
/*e*//* oyg*//**//*volb*//**//**//*es*//**//**//**/;/**//**//*n*/for/**/(/*goh*/int/**//**/bi/**/=m-1/**/;bi>=      0  ; /*               o*/bi/*           */ --                                            /* wz rwi z*/)/**//**//**//**/{    /*c    */                   if(b/* */[/**/bi]/**/==                  
/*d*/ /*j*//**//*w*//**//*u*/uint64_t(/**//**//*j*//**//**//**/0)/*m*//*u*/)continue/**/;/*w*//**//**/pos/**/=/*    */ /* */              B-clz/*          xstc*/(                                           b  [  bi   /*jqnf*/])-/**//*r*/    1     +                     bi*/*  *//**/B/**/;/*j*/                 
/*n  */break;}return/**/pos;}/*jq*/template<typename/**/F1,typename/**//*n*/F2>/**//*x*/void/**/range_process/**/(   /* jo */             /**/int          /* */l/**/                                       ,  /*  b      l kr*/int/*hr*//*    plb   */                    r/*qfx s*//**//*u*/,F1/**/                
   /*y*//**//*a*//**//**//*lx*//*sn*//**//**/block_brute/**/,/**//**/F2/**/block_quick/*h*/)/**/{assert(0/**/<=/*rq*/ l  /* */            /**/and          /* */l/**/                                      <=  r  /*         p*/and/*t*/r<n   );/*  */                    int/**/ /*e*/bl/**/=block_id               
  /*jflika*//*hq*//*dng*/(l),/**/br=/**//*ow*/block_id(/**/r/**/)/**//**/;if/*e*//**/(bl/**/==br/**/)block_brute/**//**//*g  s            *//**/          /*f wm*//**//**/                                (l  ,   r           /**//*uwt*//*   txx*/ )     ;              /*tw*//* *//**//*p*//**//**/else            
 /*liw*//**//**//*ie*//**//*m*//*h*//*e*//*m*//*ks*/{block_brute/*rj*//**//**//**/(/**/l,(/**/bl/**/+/**//**/1)/*w*//**//**//*o*/              *          /*xo*//*gbna*/B                                -   1   );            for(/**/int    bi/*s     v*/              /**/=bl  /**//**/+/**/1;/*e*//*t*/          
/*oxszgeq*//*g*//*e*//**//**//*um*//**//*g*//**//**//*p*//*ve*/bi<br/**//**//**/;bi++/**/)/**//**/block_quick(/*t*/bi);block_brute/**/                    (/*ppi*//**/                                 /*  */   /*             */br*B,/**/    /*       *//*             */r/*i*/ );}}/**/void/*yj*/range_set         
/*bt*//*yrf*//**//**/(/*k*/int/**/l,/**//**//*t*//**/int/**/r/*v*/,bool/*o*/val)/**/{/*om*//*y*//*l*/auto/**//*q*/block_brute/**//**//*b*//**//*          xa l*/=[&                                   /*  */   ]               /**//**/ (    /**/      int              /**//*gz *//*dj*/l,int/**/r)->/*uu*/         
 /*zdxlw*//*xodc*//*k*//**//**//*w*//**//*mwo*/void{int/**/bi=/**/block_id/*l*/(/**/l/**//**//**/);/**/uint64_t/**/mask/**/=range/**//*qom*//**/                (l                                  /*   i   */                /**//**/ -    bi       /**/              /*s*/*/* */B/**/+/**/1/*rpx*/,r-/**/         
 /**//*z*//**//**//**//**//*h*//*oth*//*e*//*pa*//*n*//*zsuux*//**/bi/**/*B/**/+/**/1/**/);if/**//**/(/**/val)/**//*z*/b[bi/**/]/**/|=/**//**/mask/*     */                                        ;   /*   */                 else/*u n     *//*     *//*             */b/**/[ /**/bi]&=/**//*o*/~/**//*n*/         
/**//*vr*//**//**//**//*mu*/mask;/*o*/};/**//**/auto/*f*/block_quick=[/**//**/&/**/]/**//**//**/(/**/int/**/bi/**//**/)/**/->/**//*b*//*z*//*v*/void/*o      st*/                                /*  fg   */                  /*w*/{/*      fi*/     /*t*/             b[/**/bi ]/**//**//**/=(/**//*m*/val?         
~ /*kwu*/uint64_t(/**/0):uint64_t(0/**/))/*b*/;/**//*e*/}/*y*/;/*h*//**/range_process/**/(/**//*j*/l,/**//**/r/**/,/*j*/block_brute/**//*e*//**/,block_quick/*    p*/                          /*  dw   */                    /*zzi*/   /**//*       w*//*         y   zyw*//*w *//*vri*//**//*l*/)/**/;/**/         
 /*ysqowz*//**//*kzo*//**//*x*//*j*//*j*//**/}/**/int/**//**/count/**/(/**/int/*b*/l,/**/int/**/r)/**/{/**/int/**/cnt=/**//**/0;/**/auto/*p*//**/block_brute/* ne*/                          /*   nm   */                    /*jr*//*  yeryc*/      /**//*         f  *//**/=[ &](/*x*//**//**/int/*a*/l/**/         
 /*yvu*//*y*//**//**//*mi*//*q*//*f*//**//*r*//*m*//*n*//*h*//**//**//*dd*//**//*t*//**/,int/**/r/**//*r*/)->void/**//**/{/*k*/cnt+=/*q*//**/popcnt/**/(submask                            /*  tqp   */                      /*fm*/(   l/**/,       /*k*/         /*  */r/**/) );}/**/;auto/**/block_quick=[         
/*i*//**//**/&]/**/(int/**/bi/*c*/)/**/->/**/void/**/{cnt/*p*/+=/*o*//**/popcnt(/**/b/**//**/[/**/bi/**//*q*//**/]/*s*/)/*v*/;/*b*/}/**//**/;range_process/*qq*/                         /*  tq    */                       /**//**/   /*f m       *//*d         xms  */(/**/ l/**//*rs*//**//*n*//*q*/,/**/         
/*awz*//*b*//**//**/r/**//**/,/**/block_brute/**//*xt*/,/**/block_quick/**/)/*y*//**/;return/**/cnt;}/*    jb*/int/**//*t*/find_first/*z*//**/(/*l*//**/int/**/                        /*  hw   */l                        ,/*j*/int  /*yz d       *//*          vw  *//*h*/r /**/){/**/int/**//**/pos/**/=-         
/*wfy*//**//**//*yf*//*lbrkheacbc*//*btzeie*//*rh*//**//*n*/1/**//*x*/;auto/**/block_brute/**//**//*boy       ij*/=[&](/**//**/int/*g*/l/**/,int/**/r/**//* s*/                     /*c  zs   e*/                         )->void/*   uuh*/       {for(         /*f  */int/* yc*//*qj*/i/**//**/=/*r*//**/l;         
/*j*//*jpf*//*l*//*r*//*y*//*c*//**//*uo*//*ffq*//**/i/**//**/<=r/**/and/**/pos/*f*//**/==/**/-/*a               */1/**/;i++/**/)if(/**/get/**/(/*bh*/i)/*x*/                    )/*  */   pos                           =/*y*//*c   */i/*   w   t*//*          ss  bn*/;/* det*/}/**//**//**//**/;/*e*//**/         
/*hhwiqz*//**//*q*//**//**//*sk*//**//*k*//**//*ab*//**//**//*jn*/auto/**//**/block_quick/**/                       /*j*//*lquf*/=[&]/**/(int/**//**/bi/**/                   /*   */)   ->                             /**/void/*   *//*c  ii  a*//*          ug   */{if( b[bi/*t*//**/]/**/==uint64_t(0)or         
pos!=-1)return;pos=ctz(b[bi])+bi*B;};range_process(l,r,block_brute,block_quick);return    pos  ;                        }int find_last(int l,int r){                      int  pos   =-1                   ; auto      block_brute   =[&]( int l,int  r)->   void{for(int i=l;i<=r;i++)if(get(i))pos=i;};auto        
   /*ttovpgos*//**//*il*//*ym*//*wsplaid*/block_quick                                      =  [                                  /*zk*//**/ &                         /*k  *//*   n*/                                  /*vfq*//*    zw*//* i*/ /*ve  a        l*/  ](int bi)->void/**//**/{if/*q*/(/**/b/**/         
       /*kqk*//*ah*/[bi]==/**//*q*//**/uint64_t                                           (  0                                         /**/                       /*i   evg   c*/                                      /*vc*//*f    j*//*  itk*/)    )        /*u uzun  h*/return;/**/pos/**/=/**/B-clz/*o*/         
           /*n*//**//**/(/**//**//**//**/b[                                             bi  ]                                            ) -                  /*l   tme   f*/                                       1 /*ldo*//*    k*//*a w*//*if            k*/ /**/  +/**//**/bi/**/*B;/**/};range_process         
                  /*xh*//**//*lrxbb*/                                                 (l  ,                                               /*               t*/  r/*   s*/                                          ,block_brute   /**//*v oywd*/            ,/*o */   block_quick);return/**/pos;}friend std         
                                                                                                                                           ::                ostream&                                           /**/  operator    <<(std  ::/*   az        ao*/    ostream&os,const/**/dynamic_bitset&bitset         
                                                                                                                                                         ){   for                                               (/*s */int/**/   /**//*q kdm    w*/        /*q  */i=bitset./**//**/m-/**/1/**/;/**//*t*/i>=0         
 ;                                                                                                                                                        --i                                                 /*gq*/ )os<<std   ::bitset /*    */<        B>   (bitset.b[i]);os<<'\n';return/**/os;}};/*s*/}         
/**/                                                                                                                                                                                                         /*ldfnn s*//* c   byvk*//*f h    sg*/       /*   *//*f*//**//*hjdq*//**//*c*//*x*//**//**//*w*/         
